// +build !ignore_autogenerated

/*
Copyright 2018 The Federation v2 Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	multiclusterdns "github.com/kubernetes-sigs/federation-v2/pkg/apis/multiclusterdns"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	unsafe "unsafe"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS,
		Convert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS,
		Convert_v1alpha1_MultiClusterDNSLb_To_multiclusterdns_MultiClusterDNSLb,
		Convert_multiclusterdns_MultiClusterDNSLb_To_v1alpha1_MultiClusterDNSLb,
		Convert_v1alpha1_MultiClusterDNSLbList_To_multiclusterdns_MultiClusterDNSLbList,
		Convert_multiclusterdns_MultiClusterDNSLbList_To_v1alpha1_MultiClusterDNSLbList,
		Convert_v1alpha1_MultiClusterDNSLbSpec_To_multiclusterdns_MultiClusterDNSLbSpec,
		Convert_multiclusterdns_MultiClusterDNSLbSpec_To_v1alpha1_MultiClusterDNSLbSpec,
		Convert_v1alpha1_MultiClusterDNSLbStatus_To_multiclusterdns_MultiClusterDNSLbStatus,
		Convert_multiclusterdns_MultiClusterDNSLbStatus_To_v1alpha1_MultiClusterDNSLbStatus,
		Convert_v1alpha1_MultiClusterDNSLbStatusStrategy_To_multiclusterdns_MultiClusterDNSLbStatusStrategy,
		Convert_multiclusterdns_MultiClusterDNSLbStatusStrategy_To_v1alpha1_MultiClusterDNSLbStatusStrategy,
		Convert_v1alpha1_MultiClusterDNSLbStrategy_To_multiclusterdns_MultiClusterDNSLbStrategy,
		Convert_multiclusterdns_MultiClusterDNSLbStrategy_To_v1alpha1_MultiClusterDNSLbStrategy,
	)
}

func autoConvert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS(in *ClusterDNS, out *multiclusterdns.ClusterDNS, s conversion.Scope) error {
	out.Cluster = in.Cluster
	out.LoadBalancer = in.LoadBalancer
	out.Zone = in.Zone
	out.Region = in.Region
	return nil
}

// Convert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS is an autogenerated conversion function.
func Convert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS(in *ClusterDNS, out *multiclusterdns.ClusterDNS, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS(in, out, s)
}

func autoConvert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS(in *multiclusterdns.ClusterDNS, out *ClusterDNS, s conversion.Scope) error {
	out.Cluster = in.Cluster
	out.LoadBalancer = in.LoadBalancer
	out.Zone = in.Zone
	out.Region = in.Region
	return nil
}

// Convert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS is an autogenerated conversion function.
func Convert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS(in *multiclusterdns.ClusterDNS, out *ClusterDNS, s conversion.Scope) error {
	return autoConvert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterDNSLb_To_multiclusterdns_MultiClusterDNSLb(in *MultiClusterDNSLb, out *multiclusterdns.MultiClusterDNSLb, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_MultiClusterDNSLbSpec_To_multiclusterdns_MultiClusterDNSLbSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_MultiClusterDNSLbStatus_To_multiclusterdns_MultiClusterDNSLbStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_MultiClusterDNSLb_To_multiclusterdns_MultiClusterDNSLb is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterDNSLb_To_multiclusterdns_MultiClusterDNSLb(in *MultiClusterDNSLb, out *multiclusterdns.MultiClusterDNSLb, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterDNSLb_To_multiclusterdns_MultiClusterDNSLb(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterDNSLb_To_v1alpha1_MultiClusterDNSLb(in *multiclusterdns.MultiClusterDNSLb, out *MultiClusterDNSLb, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_multiclusterdns_MultiClusterDNSLbSpec_To_v1alpha1_MultiClusterDNSLbSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_multiclusterdns_MultiClusterDNSLbStatus_To_v1alpha1_MultiClusterDNSLbStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_multiclusterdns_MultiClusterDNSLb_To_v1alpha1_MultiClusterDNSLb is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterDNSLb_To_v1alpha1_MultiClusterDNSLb(in *multiclusterdns.MultiClusterDNSLb, out *MultiClusterDNSLb, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterDNSLb_To_v1alpha1_MultiClusterDNSLb(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterDNSLbList_To_multiclusterdns_MultiClusterDNSLbList(in *MultiClusterDNSLbList, out *multiclusterdns.MultiClusterDNSLbList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]multiclusterdns.MultiClusterDNSLb)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_MultiClusterDNSLbList_To_multiclusterdns_MultiClusterDNSLbList is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterDNSLbList_To_multiclusterdns_MultiClusterDNSLbList(in *MultiClusterDNSLbList, out *multiclusterdns.MultiClusterDNSLbList, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterDNSLbList_To_multiclusterdns_MultiClusterDNSLbList(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterDNSLbList_To_v1alpha1_MultiClusterDNSLbList(in *multiclusterdns.MultiClusterDNSLbList, out *MultiClusterDNSLbList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]MultiClusterDNSLb)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_multiclusterdns_MultiClusterDNSLbList_To_v1alpha1_MultiClusterDNSLbList is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterDNSLbList_To_v1alpha1_MultiClusterDNSLbList(in *multiclusterdns.MultiClusterDNSLbList, out *MultiClusterDNSLbList, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterDNSLbList_To_v1alpha1_MultiClusterDNSLbList(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterDNSLbSpec_To_multiclusterdns_MultiClusterDNSLbSpec(in *MultiClusterDNSLbSpec, out *multiclusterdns.MultiClusterDNSLbSpec, s conversion.Scope) error {
	out.FederationName = in.FederationName
	out.DNSSuffix = in.DNSSuffix
	return nil
}

// Convert_v1alpha1_MultiClusterDNSLbSpec_To_multiclusterdns_MultiClusterDNSLbSpec is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterDNSLbSpec_To_multiclusterdns_MultiClusterDNSLbSpec(in *MultiClusterDNSLbSpec, out *multiclusterdns.MultiClusterDNSLbSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterDNSLbSpec_To_multiclusterdns_MultiClusterDNSLbSpec(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterDNSLbSpec_To_v1alpha1_MultiClusterDNSLbSpec(in *multiclusterdns.MultiClusterDNSLbSpec, out *MultiClusterDNSLbSpec, s conversion.Scope) error {
	out.FederationName = in.FederationName
	out.DNSSuffix = in.DNSSuffix
	return nil
}

// Convert_multiclusterdns_MultiClusterDNSLbSpec_To_v1alpha1_MultiClusterDNSLbSpec is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterDNSLbSpec_To_v1alpha1_MultiClusterDNSLbSpec(in *multiclusterdns.MultiClusterDNSLbSpec, out *MultiClusterDNSLbSpec, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterDNSLbSpec_To_v1alpha1_MultiClusterDNSLbSpec(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterDNSLbStatus_To_multiclusterdns_MultiClusterDNSLbStatus(in *MultiClusterDNSLbStatus, out *multiclusterdns.MultiClusterDNSLbStatus, s conversion.Scope) error {
	out.DNS = *(*[]multiclusterdns.ClusterDNS)(unsafe.Pointer(&in.DNS))
	return nil
}

// Convert_v1alpha1_MultiClusterDNSLbStatus_To_multiclusterdns_MultiClusterDNSLbStatus is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterDNSLbStatus_To_multiclusterdns_MultiClusterDNSLbStatus(in *MultiClusterDNSLbStatus, out *multiclusterdns.MultiClusterDNSLbStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterDNSLbStatus_To_multiclusterdns_MultiClusterDNSLbStatus(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterDNSLbStatus_To_v1alpha1_MultiClusterDNSLbStatus(in *multiclusterdns.MultiClusterDNSLbStatus, out *MultiClusterDNSLbStatus, s conversion.Scope) error {
	out.DNS = *(*[]ClusterDNS)(unsafe.Pointer(&in.DNS))
	return nil
}

// Convert_multiclusterdns_MultiClusterDNSLbStatus_To_v1alpha1_MultiClusterDNSLbStatus is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterDNSLbStatus_To_v1alpha1_MultiClusterDNSLbStatus(in *multiclusterdns.MultiClusterDNSLbStatus, out *MultiClusterDNSLbStatus, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterDNSLbStatus_To_v1alpha1_MultiClusterDNSLbStatus(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterDNSLbStatusStrategy_To_multiclusterdns_MultiClusterDNSLbStatusStrategy(in *MultiClusterDNSLbStatusStrategy, out *multiclusterdns.MultiClusterDNSLbStatusStrategy, s conversion.Scope) error {
	out.DefaultStatusStorageStrategy = in.DefaultStatusStorageStrategy
	return nil
}

// Convert_v1alpha1_MultiClusterDNSLbStatusStrategy_To_multiclusterdns_MultiClusterDNSLbStatusStrategy is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterDNSLbStatusStrategy_To_multiclusterdns_MultiClusterDNSLbStatusStrategy(in *MultiClusterDNSLbStatusStrategy, out *multiclusterdns.MultiClusterDNSLbStatusStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterDNSLbStatusStrategy_To_multiclusterdns_MultiClusterDNSLbStatusStrategy(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterDNSLbStatusStrategy_To_v1alpha1_MultiClusterDNSLbStatusStrategy(in *multiclusterdns.MultiClusterDNSLbStatusStrategy, out *MultiClusterDNSLbStatusStrategy, s conversion.Scope) error {
	out.DefaultStatusStorageStrategy = in.DefaultStatusStorageStrategy
	return nil
}

// Convert_multiclusterdns_MultiClusterDNSLbStatusStrategy_To_v1alpha1_MultiClusterDNSLbStatusStrategy is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterDNSLbStatusStrategy_To_v1alpha1_MultiClusterDNSLbStatusStrategy(in *multiclusterdns.MultiClusterDNSLbStatusStrategy, out *MultiClusterDNSLbStatusStrategy, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterDNSLbStatusStrategy_To_v1alpha1_MultiClusterDNSLbStatusStrategy(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterDNSLbStrategy_To_multiclusterdns_MultiClusterDNSLbStrategy(in *MultiClusterDNSLbStrategy, out *multiclusterdns.MultiClusterDNSLbStrategy, s conversion.Scope) error {
	out.DefaultStorageStrategy = in.DefaultStorageStrategy
	return nil
}

// Convert_v1alpha1_MultiClusterDNSLbStrategy_To_multiclusterdns_MultiClusterDNSLbStrategy is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterDNSLbStrategy_To_multiclusterdns_MultiClusterDNSLbStrategy(in *MultiClusterDNSLbStrategy, out *multiclusterdns.MultiClusterDNSLbStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterDNSLbStrategy_To_multiclusterdns_MultiClusterDNSLbStrategy(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterDNSLbStrategy_To_v1alpha1_MultiClusterDNSLbStrategy(in *multiclusterdns.MultiClusterDNSLbStrategy, out *MultiClusterDNSLbStrategy, s conversion.Scope) error {
	out.DefaultStorageStrategy = in.DefaultStorageStrategy
	return nil
}

// Convert_multiclusterdns_MultiClusterDNSLbStrategy_To_v1alpha1_MultiClusterDNSLbStrategy is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterDNSLbStrategy_To_v1alpha1_MultiClusterDNSLbStrategy(in *multiclusterdns.MultiClusterDNSLbStrategy, out *MultiClusterDNSLbStrategy, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterDNSLbStrategy_To_v1alpha1_MultiClusterDNSLbStrategy(in, out, s)
}
